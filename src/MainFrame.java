
import java.awt.TextArea;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String projectDate;

    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildAddClassCourseCodeBox(); 
        rebuildStudentScheduleClassSelectClassBox();
        
        rebuildStudentScheduleClassSelectStudentBox();
        rebuildDisplayStudentScheduleSelectStudentBox();
        rebuildDisplayClassListComboBox();
        rebuildDropStudentComboBox();
        rebuildAdminDropClassComboBox();
        rebuildStudentDropClassCombobox();
        rebuildStudentDropClassStudentComboBox();
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        System.out.println(semesters);
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(semesters.size()-1));
            currentSemester = semesters.get(semesters.size()-1);
            currentSemesterComboBox.setSelectedItem(currentSemester);
            
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
        currentSemesterComboBox.setSelectedItem(currentSemester);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        addStudentIDTextfield = new javax.swing.JTextField();
        addStudentFirstNameTextfield = new javax.swing.JTextField();
        addStudentLastNameTextfield = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        addCourseCodeTextfield = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addCourseDescriptionTextfield = new javax.swing.JTextField();
        addCourseSubmitBtn = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addClassSubmitBtn = new javax.swing.JButton();
        addClassStatusLabel = new javax.swing.JLabel();
        addClassCourseCodeBox = new javax.swing.JComboBox<>();
        SpinnerNumberModel model = new SpinnerNumberModel(1,0,Integer.MAX_VALUE,1);
        addClassSeatsSpinner = new javax.swing.JSpinner(model);
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        DisplayClassListComboBox = new javax.swing.JComboBox<>();
        DisplayClassListButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        WaitlistedStudentsTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ScheduledStudentsTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        DropStudentComboBox = new javax.swing.JComboBox<>();
        DropStudentButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        DropStudentTextArea = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        AdminDropClassComboBox = new javax.swing.JComboBox<>();
        AdminDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        AdminDropClassTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayClasses = new javax.swing.JTable();
        DisplayClassesButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        StudentScheduleClassSelectClassBox = new javax.swing.JComboBox<>();
        StudentScheduleClassSelectStudentBox = new javax.swing.JComboBox<>();
        StudentScheduleClassSubmitButton = new javax.swing.JButton();
        StudentScheduleClassLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        DisplayStudentScheduleSelectStudentBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        DisplayStudentTable = new javax.swing.JTable();
        DisplayStudentScheduleButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        StudentDropClassStudentComboBox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        StudentDropClassCombobox = new javax.swing.JComboBox<>();
        StudentDropClassSubmit = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        StudentDropClassTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSemesterSubmitButton)
                            .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        jLabel9.setText("Student ID: ");

        jLabel10.setText("First Name:");

        jLabel11.setText("Last Name:");

        addStudentIDTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentIDTextfieldActionPerformed(evt);
            }
        });

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        addStudentStatusLabel.setText("   ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addStudentIDTextfield))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addStudentFirstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addStudentSubmitButton)
                                .addComponent(addStudentLastNameTextfield))))
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(addStudentIDTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(addStudentFirstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(addStudentLastNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Student", jPanel7);

        jLabel4.setText("Course Code:");

        addCourseCodeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCodeTextfieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Course Description:");

        addCourseDescriptionTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseDescriptionTextfieldActionPerformed(evt);
            }
        });

        addCourseSubmitBtn.setText("Submit");
        addCourseSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitBtnActionPerformed(evt);
            }
        });

        addCourseStatusLabel.setText("            ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSubmitBtn)
                            .addComponent(addCourseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addCourseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(addCourseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCourseSubmitBtn)
                .addGap(18, 18, 18)
                .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(243, 243, 243))
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        jLabel5.setText("Course Code:");

        jLabel6.setText("Seats: ");

        addClassSubmitBtn.setText("Submit");
        addClassSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitBtnActionPerformed(evt);
            }
        });

        addClassStatusLabel.setText("          ");

        addClassCourseCodeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addClassCourseCodeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassCourseCodeBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassCourseCodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addClassSubmitBtn)
                            .addComponent(addClassSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addClassCourseCodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(addClassSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addClassSubmitBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Class", jPanel6);

        jLabel14.setText("Choose Class:");

        DisplayClassListComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DisplayClassListButton.setText("Display");
        DisplayClassListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayClassListButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("Scheduled Students in the Class");

        WaitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane3.setViewportView(WaitlistedStudentsTable);

        jLabel16.setText("Waitlisted Students in the Class in Waitlist Order");

        ScheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane4.setViewportView(ScheduledStudentsTable);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(DisplayClassListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(DisplayClassListButton))
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisplayClassListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisplayClassListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        jTabbedPane2.addTab("Display Class List", jPanel10);

        jLabel17.setText("Choose Student:");

        DropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropStudentButton.setText("Submit");
        DropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropStudentButtonActionPerformed(evt);
            }
        });

        DropStudentTextArea.setEditable(false);
        DropStudentTextArea.setColumns(20);
        DropStudentTextArea.setRows(5);
        jScrollPane5.setViewportView(DropStudentTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DropStudentButton)
                            .addComponent(DropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(DropStudentButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel11);

        jLabel18.setText("Choose Class:");

        AdminDropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        AdminDropClassSubmitButton.setText("Submit");
        AdminDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminDropClassSubmitButtonActionPerformed(evt);
            }
        });

        AdminDropClassTextArea.setEditable(false);
        AdminDropClassTextArea.setColumns(20);
        AdminDropClassTextArea.setRows(5);
        jScrollPane6.setViewportView(AdminDropClassTextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AdminDropClassSubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(AdminDropClassComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AdminDropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AdminDropClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Class", jPanel12);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        DisplayClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane1.setViewportView(DisplayClasses);

        DisplayClassesButton.setText("Display");
        DisplayClassesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayClassesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DisplayClassesButton)
                .addContainerGap(666, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DisplayClassesButton)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Dispaly Classes", jPanel5);

        jLabel8.setText("Select Student:");

        jLabel12.setText("Select Class:");

        StudentScheduleClassSelectClassBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        StudentScheduleClassSelectStudentBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        StudentScheduleClassSubmitButton.setText("Submit");
        StudentScheduleClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentScheduleClassSubmitButtonActionPerformed(evt);
            }
        });

        StudentScheduleClassLabel.setText("    ");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StudentScheduleClassSelectStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StudentScheduleClassSelectClassBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(StudentScheduleClassSubmitButton))
                    .addComponent(StudentScheduleClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentScheduleClassSelectClassBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentScheduleClassSelectStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(StudentScheduleClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(StudentScheduleClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(317, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Class", jPanel8);

        jLabel13.setText("Selec Student: ");

        DisplayStudentScheduleSelectStudentBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DisplayStudentScheduleSelectStudentBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayStudentScheduleSelectStudentBoxActionPerformed(evt);
            }
        });

        DisplayStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane2.setViewportView(DisplayStudentTable);

        DisplayStudentScheduleButton.setText("Display");
        DisplayStudentScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayStudentScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DisplayStudentScheduleSelectStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(DisplayStudentScheduleButton)))
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(DisplayStudentScheduleSelectStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(DisplayStudentScheduleButton)
                .addGap(248, 248, 248))
        );

        jTabbedPane3.addTab("Display Student Schedule", jPanel9);

        jLabel19.setText("Choose Student:");

        StudentDropClassStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel20.setText("Choose Class:");

        StudentDropClassCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        StudentDropClassSubmit.setText("Submit");
        StudentDropClassSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDropClassSubmitActionPerformed(evt);
            }
        });

        StudentDropClassTextArea.setColumns(20);
        StudentDropClassTextArea.setRows(5);
        jScrollPane7.setViewportView(StudentDropClassTextArea);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StudentDropClassSubmit)
                            .addComponent(StudentDropClassStudentComboBox, 0, 142, Short.MAX_VALUE)
                            .addComponent(StudentDropClassCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentDropClassStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentDropClassCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(StudentDropClassSubmit)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Class", jPanel13);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project Date: " + projectDate);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed

        String semester = addSemesterTextfield.getText();
        if(semester.trim().equals("")){
            addSemesterStatusLabel.setText("Semester field is empty!");
            return;
        }else{
            SemesterQueries.addSemester(semester.trim());
            currentSemester = semester.trim();
            currentSemesterLabel.setText(currentSemester);
            addSemesterStatusLabel.setText("Semester " + semester.trim() + " has been added.");
            rebuildSemesterComboBoxes();
        }
        
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void addCourseCodeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseCodeTextfieldActionPerformed
        // TODO add your handling code here:
 
    }//GEN-LAST:event_addCourseCodeTextfieldActionPerformed

    private void addCourseDescriptionTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseDescriptionTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCourseDescriptionTextfieldActionPerformed

    private void addCourseSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitBtnActionPerformed
        // TODO add your handling code here:
        String code = addCourseCodeTextfield.getText();
        String description = addCourseDescriptionTextfield.getText();
        if (code.isEmpty() || description.isEmpty()){
            addCourseStatusLabel.setText("Both fields are required.");
            return;
        }
        CourseQueries.addCourse(new CourseEntry(code,description));
        addCourseStatusLabel.setText("Course " + code + " has been added");
        
        rebuildAddClassCourseCodeBox();
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addCourseSubmitBtnActionPerformed

    private void addStudentIDTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentIDTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addStudentIDTextfieldActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        String id   = addStudentIDTextfield.getText();
        String fNam = addStudentFirstNameTextfield.getText();
        String lNam = addStudentLastNameTextfield.getText();

        if (id.isEmpty() || fNam.isEmpty() || lNam.isEmpty()) {
            addStudentStatusLabel.setText("All three fields are required.");
            return;
        }

        StudentQueries.addStudent(new StudentEntry(id, fNam, lNam));
        addStudentStatusLabel.setText("Student : " + lNam+", "+fNam + " added.");


        rebuildStudentScheduleClassSelectStudentBox();
        rebuildDisplayStudentScheduleSelectStudentBox();
        rebuildDropStudentComboBox();
        rebuildStudentDropClassStudentComboBox();
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void addClassCourseCodeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassCourseCodeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addClassCourseCodeBoxActionPerformed
    public void rebuildAddClassCourseCodeBox() {

        ArrayList<String> courses = CourseQueries.getAllCourseCodes();              
        addClassCourseCodeBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));

        
    }
    
    public void rebuildDropStudentComboBox(){
        
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        
        
        DropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        
        
    }
    
    public void rebuildStudentDropClassCombobox(){
        
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);
        StudentDropClassCombobox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        
    }
    public void rebuildStudentDropClassStudentComboBox(){
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        if(students.size() > 0 ){
            String studentNames[] = new String[students.size()];
            for(int i =0 ; i< students.size(); i++){
                studentNames[i] = students.get(i).getLastName() + ", " + students.get(i).getFirstName();
            }
            StudentDropClassStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames));
        }else{
            StudentDropClassStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel());
            return;
        }
    }
    
     public void rebuildAdminDropClassComboBox(){
        
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);
        AdminDropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
    }
    public void rebuildDisplayClassListComboBox(){
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);
        DisplayClassListComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));

       
    }
    public void rebuildStudentScheduleClassSelectClassBox(){
        
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);              
        StudentScheduleClassSelectClassBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        
    }
    public void rebuildStudentScheduleClassSelectStudentBox(){
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        if(students.size() > 0 ){
            String studentNames[] = new String[students.size()];
            for(int i =0 ; i< students.size(); i++){
                studentNames[i] = students.get(i).getLastName() + ", " + students.get(i).getFirstName();
            }
            StudentScheduleClassSelectStudentBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames));
        }else{
            StudentScheduleClassSelectStudentBox.setModel(new javax.swing.DefaultComboBoxModel());
            return;
        }
    }
    public void rebuildDisplayStudentScheduleSelectStudentBox(){
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        if(students.size() > 0 ){
            String studentNames[] = new String[students.size()];
            for(int i =0 ; i< students.size(); i++){
                studentNames[i] = students.get(i).getLastName() + ", " + students.get(i).getFirstName();
            }
            DisplayStudentScheduleSelectStudentBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames));
        }else{
            DisplayStudentScheduleSelectStudentBox.setModel(new javax.swing.DefaultComboBoxModel());
            return;
        }
    }
    
    private void addClassSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitBtnActionPerformed
        if (addClassCourseCodeBox.getItemCount() == 0){
            addClassStatusLabel.setText("No available courses");
            return;
        }
        
        String courseCode = addClassCourseCodeBox.getSelectedItem().toString();
        
        int seats = ((Integer) addClassSeatsSpinner.getValue()).intValue();
        
        boolean ok = ClassQueries.addClass(new ClassEntry(currentSemester, courseCode, seats));
       
        if (ok) {
            
        
            addClassStatusLabel.setText("Class " + courseCode + " added for " + currentSemester + "."); 
        }else{
            addClassStatusLabel.setText("That class already exists this semester.");
        }
        
        rebuildStudentScheduleClassSelectClassBox();
        rebuildDisplayClassListComboBox();
        rebuildAdminDropClassComboBox();
        rebuildStudentDropClassCombobox();
    }//GEN-LAST:event_addClassSubmitBtnActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        System.out.println(currentSemester);
        currentSemesterLabel.setText(currentSemester);
        rebuildAddClassCourseCodeBox();
        rebuildStudentScheduleClassSelectClassBox();
        rebuildDisplayClassListComboBox();
        rebuildAdminDropClassComboBox();
        rebuildStudentDropClassCombobox();
        
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void StudentScheduleClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentScheduleClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        int studentIndex = StudentScheduleClassSelectStudentBox.getSelectedIndex();
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        
        String currClassCode =(String) StudentScheduleClassSelectClassBox.getSelectedItem();
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        String status = "S";
        if(ScheduleQueries.getScheduledStudentCount(currentSemester, currClassCode) >= ClassQueries.getClassSeats(currentSemester, currClassCode)){ 
            status = "W";
        }
        System.out.println(currClassCode);
        System.out.println(ClassQueries.getClassSeats(currentSemester, currClassCode));
        System.out.println(students.get(studentIndex).getStudentID());
        ScheduleQueries.addScheduleEntry(new ScheduleEntry(currentSemester,currClassCode, students.get(studentIndex).getStudentID(), status, currentTimestamp ));
        if(status.equals("S")){
            StudentScheduleClassLabel.setText("Student: "+ students.get(studentIndex).getLastName() + ", "+  students.get(studentIndex).getFirstName() + " succesfully enrolled in "+currClassCode);
        }
        else{
            StudentScheduleClassLabel.setText("Student: "+ students.get(studentIndex).getLastName() + ", "+  students.get(studentIndex).getFirstName() + " waitlisted for "+currClassCode);
        }
        
    }//GEN-LAST:event_StudentScheduleClassSubmitButtonActionPerformed

    private void DisplayStudentScheduleSelectStudentBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayStudentScheduleSelectStudentBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayStudentScheduleSelectStudentBoxActionPerformed

    private void DisplayClassesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayClassesButtonActionPerformed
        ArrayList<ClassDescription> classes = MultiTableQueries.getAllClassDescriptions(currentSemester);
        DefaultTableModel DisplayClasses = (DefaultTableModel) this.DisplayClasses.getModel();
      
        DisplayClasses.setNumRows(0);
        Object[] rowData = new Object[3];
        
        for (ClassDescription c: classes){
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getDescription();
            rowData[2] = c.getSeats();
            
            DisplayClasses.addRow(rowData);
        }
    }//GEN-LAST:event_DisplayClassesButtonActionPerformed

    private void DisplayStudentScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayStudentScheduleButtonActionPerformed
        int index = DisplayStudentScheduleSelectStudentBox.getSelectedIndex();
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        
        if(index >=0){
            ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester,students.get(index).getStudentID() );
            DefaultTableModel DisplayStudentTable = (DefaultTableModel) this.DisplayStudentTable.getModel();

            DisplayStudentTable.setNumRows(0);
            Object[] rowData = new Object[2];

            for (ScheduleEntry c: schedule){
                rowData[0] = c.getCourseCode();
                rowData[1] = c.getStatus();
                DisplayStudentTable.addRow(rowData);
            }
        }
    }//GEN-LAST:event_DisplayStudentScheduleButtonActionPerformed

    private void DisplayClassListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayClassListButtonActionPerformed
        if(DisplayClassListComboBox.getSelectedItem() != null){
            String courseCode = DisplayClassListComboBox.getSelectedItem().toString();
            String semester  = currentSemester;

            ArrayList<StudentEntry> scheduled = MultiTableQueries.getScheduledStudentsByClass(semester, courseCode);
            ArrayList<StudentEntry> waitlisted  = MultiTableQueries.getWaitlistedStudentsByClass(semester, courseCode);
                if(!courseCode.equals("")){

                DefaultTableModel ScheduledStudentsTable = (DefaultTableModel) this.ScheduledStudentsTable.getModel();

                ScheduledStudentsTable.setNumRows(0);
                Object[] rowDataS = new Object[3];

                for (StudentEntry s: scheduled){
                    rowDataS[0] = s.getLastName();
                    rowDataS[1] = s.getFirstName();
                    rowDataS[2] = s.getStudentID();
                    ScheduledStudentsTable.addRow(rowDataS);
                }


                DefaultTableModel WaitlistedStudentsTable = (DefaultTableModel) this.WaitlistedStudentsTable.getModel();

                WaitlistedStudentsTable.setNumRows(0);
                Object[] rowDataW = new Object[3];

                for (StudentEntry w: waitlisted){
                    rowDataW[0] = w.getLastName();
                    rowDataW[1] = w.getFirstName();
                    rowDataW[2] = w.getStudentID();
                    WaitlistedStudentsTable.addRow(rowDataW);
                }
            }
        }
                
        
    }//GEN-LAST:event_DisplayClassListButtonActionPerformed

    private void DropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropStudentButtonActionPerformed
        
        int studentIndex = DropStudentComboBox.getSelectedIndex();
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        
  
        StudentEntry st = students.get(studentIndex);
        String txtArea = st + " has been dropped from the list of students.\n\n";
       
        ArrayList<String> semesterList = SemesterQueries.getSemesterList();
        
        for( String semester : semesterList){
           
            txtArea += "For Semester: " + semester +"\n";
            
            ArrayList<ScheduleEntry> Scheduled = ScheduleQueries.getScheduleByStudent(semester, st.getStudentID());
            
            if (Scheduled.isEmpty()) {
                txtArea += "  (no classes)\n\n";
                continue;
            }
            
            for (ScheduleEntry se : Scheduled) {
                String code = se.getCourseCode();

                if ("S".equals(se.getStatus())) {
                    
                    txtArea += st + " has been dropped from " + code + "\n";
                    
                    System.out.println("waitttt t" + semester + "    "  + code);

                    ArrayList<StudentEntry> wait = MultiTableQueries.getWaitlistedStudentsByClass(semester, code);
                   
                   
                    
                    if (!wait.isEmpty()) {
                        StudentEntry next = wait.get(0);
                        txtArea +=  next + " has been scheduled into " + code + "\n";
                    }
                } else { 
                    
                    txtArea += st + " has been dropped from the waitlist for " + code + "\n";
                }
            }

            txtArea += "\n";

        
        }
        
        DropStudentTextArea.setText(txtArea);
        
        StudentQueries.dropStudent(st.getStudentID());
      
        rebuildStudentScheduleClassSelectStudentBox();
        rebuildDisplayStudentScheduleSelectStudentBox();
        rebuildDropStudentComboBox();
        rebuildStudentDropClassStudentComboBox();
        
    }//GEN-LAST:event_DropStudentButtonActionPerformed

    private void AdminDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminDropClassSubmitButtonActionPerformed
        
        
        String txtArea="";
        if(AdminDropClassComboBox.getSelectedItem() != null){
            String courseCode = AdminDropClassComboBox.getSelectedItem().toString();
            String semester  = currentSemester;

            ArrayList<StudentEntry> scheduled = MultiTableQueries.getScheduledStudentsByClass(semester, courseCode);
            ArrayList<StudentEntry> waitlisted  = MultiTableQueries.getWaitlistedStudentsByClass(semester, courseCode);

            if(!courseCode.equals("")){
                
                txtArea = "Scheduled Students dropped from the course:\n";
                for (StudentEntry s: scheduled){
                    txtArea+= s +"\n";
                }

                txtArea+="\nWaitlisted Students dropped from the course:\n";
                
                for (StudentEntry w: waitlisted){
                    txtArea+= w +"\n";
                }
            }
            AdminDropClassTextArea.setText(txtArea);
            ClassQueries.dropClass(semester, courseCode);
            
            rebuildAdminDropClassComboBox();
            rebuildDisplayClassListComboBox();
            rebuildStudentScheduleClassSelectClassBox();
            rebuildStudentDropClassCombobox();
        }
        
    }//GEN-LAST:event_AdminDropClassSubmitButtonActionPerformed

    private void StudentDropClassSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDropClassSubmitActionPerformed
               
        String txtArea = "";
        if (StudentDropClassStudentComboBox.getSelectedItem() != null) {
            int studentIndex = StudentDropClassStudentComboBox.getSelectedIndex();
            ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
            StudentEntry st = students.get(studentIndex);

            ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, st.getStudentID());

            if (schedule.isEmpty()) {
                StudentDropClassTextArea.setText("You are not enrolled in this class!");
                return;
            }

            String courseCode = StudentDropClassCombobox.getSelectedItem().toString();
            String semester = currentSemester;

           

            if (!courseCode.equals("")) {
                for (ScheduleEntry se : schedule) {
                    String code = se.getCourseCode();
                    if (courseCode.equals(code)) {
                        System.out.println("Student : " + st + " / coursecode match: " + code);
                        
                        if ("S".equals(se.getStatus())) {
                            txtArea += st + " has been dropped from " + code + "\n";
                            ArrayList<StudentEntry> wait = MultiTableQueries.getWaitlistedStudentsByClass(semester, code);
                            if (!wait.isEmpty()) {
                                StudentEntry next = wait.get(0);
                                txtArea += next + " has been scheduled into " + code + "\n";
                            }
                        } else {
                            txtArea += st + " has been dropped from the waitlist for " + code + "\n";
                        }
                    }
                }
            }
            
            StudentDropClassTextArea.setText(txtArea);
            ScheduleQueries.dropStudentScheduleByCourse(semester, st.getStudentID(), courseCode);
            
            rebuildAdminDropClassComboBox();
            rebuildDisplayClassListComboBox();
            rebuildStudentScheduleClassSelectClassBox();
            rebuildStudentDropClassCombobox();
        }
    }//GEN-LAST:event_StudentDropClassSubmitActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            projectDate = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            projectDate = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime()).toString();

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(projectDate.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AdminDropClassComboBox;
    private javax.swing.JButton AdminDropClassSubmitButton;
    private javax.swing.JTextArea AdminDropClassTextArea;
    private javax.swing.JButton DisplayClassListButton;
    private javax.swing.JComboBox<String> DisplayClassListComboBox;
    private javax.swing.JTable DisplayClasses;
    private javax.swing.JButton DisplayClassesButton;
    private javax.swing.JButton DisplayStudentScheduleButton;
    private javax.swing.JComboBox<String> DisplayStudentScheduleSelectStudentBox;
    private javax.swing.JTable DisplayStudentTable;
    private javax.swing.JButton DropStudentButton;
    private javax.swing.JComboBox<String> DropStudentComboBox;
    private javax.swing.JTextArea DropStudentTextArea;
    private javax.swing.JTable ScheduledStudentsTable;
    private javax.swing.JComboBox<String> StudentDropClassCombobox;
    private javax.swing.JComboBox<String> StudentDropClassStudentComboBox;
    private javax.swing.JButton StudentDropClassSubmit;
    private javax.swing.JTextArea StudentDropClassTextArea;
    private javax.swing.JLabel StudentScheduleClassLabel;
    private javax.swing.JComboBox<String> StudentScheduleClassSelectClassBox;
    private javax.swing.JComboBox<String> StudentScheduleClassSelectStudentBox;
    private javax.swing.JButton StudentScheduleClassSubmitButton;
    private javax.swing.JTable WaitlistedStudentsTable;
    private javax.swing.JButton aboutButton;
    private javax.swing.JComboBox<String> addClassCourseCodeBox;
    private javax.swing.JSpinner addClassSeatsSpinner;
    private javax.swing.JLabel addClassStatusLabel;
    private javax.swing.JButton addClassSubmitBtn;
    private javax.swing.JTextField addCourseCodeTextfield;
    private javax.swing.JTextField addCourseDescriptionTextfield;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitBtn;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JTextField addStudentFirstNameTextfield;
    private javax.swing.JTextField addStudentIDTextfield;
    private javax.swing.JTextField addStudentLastNameTextfield;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    // End of variables declaration//GEN-END:variables
}
